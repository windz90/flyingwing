apply plugin: 'com.android.application'

android {
	compileSdkVersion 29
	defaultConfig {
		applicationId "com.flyingwing.android.example"
		minSdkVersion 19
		targetSdkVersion 29
		versionCode 1
		versionName "1.0"
		testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
		manifestPlaceholders = [appName:"@string/app_name", appIcon:"@drawable/ic_launcher", appIconRound:"@drawable/ic_launcher_round"]
		setProperty("archivesBaseName", "app-$versionName")// Set output file name
//		ndk {
//			abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
//		}
		externalNativeBuild {
			cmake {
				arguments "-DANDROID_TOOLCHAIN=clang",
						"-DANDROID_STL=c++_static",
						"-DANDROID_ARM_MODE=arm",
						"-DANDROID_ARM_NEON=TRUE"
				abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'//'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64', NDK r17 remove 'armeabi', 'mips', 'mips64'
			}
		}
	}

	signingConfigs {
		release {
			System.println("\n＊＊　　　　　～喝杯水休息一下～　　　　　＊＊")
			System.println("＊＊　正在強迫懶惰的Ｇｒａｄｌｅ市民工作　＊＊\n")
			// Keystore properties are set in gradle.properties
//			storeFile file(KEYSTORE_FILE)
//			storePassword KEYSTORE_PASSWORD
//			keyAlias KEYSTORE_ALIAS
//			keyPassword KEYSTORE_ALIAS_PASSWORD
		}
	}

	externalNativeBuild {
		cmake {
			path "CMakeLists.txt"
		}
	}

	splits {
		abi {
			enable true
			reset()
			include 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
			universalApk false // generate an additional APK that contains all the ABIs
		}
	}

	buildTypes {
		debug {
			versionNameSuffix ".debug"
			buildConfigField "boolean", "DEBUG_LOG", "true"
			zipAlignEnabled false
			minifyEnabled false
			shrinkResources false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
		alpha {
			buildConfigField "boolean", "DEBUG_LOG", "true"
			zipAlignEnabled true
			minifyEnabled true
			shrinkResources true
			proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
			signingConfig signingConfigs.release
		}
		release {
			buildConfigField "boolean", "DEBUG_LOG", "false"
			zipAlignEnabled true
			minifyEnabled true
			shrinkResources true
			proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
			signingConfig signingConfigs.release
		}
	}

//	lintOptions {
//		abortOnError false
//		checkReleaseBuilds false
//	}

	// Rename output file name
//	applicationVariants.all { variant ->
//		variant.outputs.all { output ->
//			def fileNameOriginal = output.outputFileName
//			output.outputFileName = "app-${defaultConfig.versionName}" + fileNameOriginal.substring(fileNameOriginal.lastIndexOf("."))
//		}
//	}
}

dependencies {
	implementation fileTree(include: ['*.jar'], dir: 'libs')
	testImplementation 'junit:junit:4.13'
	androidTestImplementation 'androidx.test.ext:junit:1.1.1'
	androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
	implementation 'androidx.appcompat:appcompat:1.1.0'
	implementation project(':flyingwing')
}

// Keystore properties are set in module directory file
def keystorePropertiesFile = file('keystore.properties')
def properties = new Properties()
if (keystorePropertiesFile.exists()) {
	properties.load(new FileInputStream(keystorePropertiesFile))
	android.signingConfigs.release {
		storeFile file(properties['KEYSTORE_FILE'])
		storePassword properties['KEYSTORE_PASSWORD']
		keyAlias properties['KEYSTORE_ALIAS']
		keyPassword properties['KEYSTORE_ALIAS_PASSWORD']
	}
} else {
	println 'File \'keystore.properties\' not found!'
}